openapi: 3.0.3
info:
  title: Traveler Bloggers Platform API
  version: 1.0.0
  description: API documentation for the Traveler Bloggers Platform authentication system

servers:
  - url: http://localhost:3000/api
    description: Development server

paths:
  /auth/register:
    post:
      tags: [Authentication]
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Invalid input
        '409':
          description: Email or username already exists
        '500':
          description: Server error

  /auth/login:
    post:
      tags: [Authentication]
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials
        '500':
          description: Server error

  /auth/password-reset/request:
    post:
      tags: [Authentication]
      summary: Request password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required: [email]
      responses:
        '200':
          description: Password reset token generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
        '404':
          description: User not found
        '500':
          description: Server error

  /auth/password-reset/confirm:
    post:
      tags: [Authentication]
      summary: Confirm password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                newPassword:
                  type: string
                  minLength: 8
              required: [token, newPassword]
      responses:
        '200':
          description: Password reset successfully
        '400':
          description: Invalid or expired token
        '500':
          description: Server error

  /auth/verify-email/request:
    post:
      tags: [Authentication]
      summary: Request email verification
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Email verification token generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
        '500':
          description: Server error

  /auth/verify-email/confirm:
    post:
      tags: [Authentication]
      summary: Confirm email verification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required: [token]
      responses:
        '200':
          description: Email verified successfully
        '400':
          description: Invalid token
        '500':
          description: Server error

  /auth/refresh-token:
    post:
      tags: [Authentication]
      summary: Refresh access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
              required: [refreshToken]
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                  refreshToken:
                    type: string
        '401':
          description: Invalid or expired refresh token
        '500':
          description: Server error

  /auth/logout:
    post:
      tags: [Authentication]
      summary: Logout user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
              required: [refreshToken]
      responses:
        '200':
          description: Logged out successfully
        '500':
          description: Server error

  /auth/sessions:
    get:
      tags: [Authentication]
      summary: Get active sessions
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Active sessions retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  sessions:
                    type: array
                    items:
                      type: object
        '500':
          description: Server error
    delete:
      tags: [Authentication]
      summary: Revoke a session
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  type: string
              required: [sessionId]
      responses:
        '200':
          description: Session revoked successfully
        '500':
          description: Server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserRegistration:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
        google_token:
          type: string
        facebook_token:
          type: string
        discord_token:
          type: string
      required: [first_name, last_name, username, email]

    UserLogin:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        google_token:
          type: string
        facebook_token:
          type: string
        discord_token:
          type: string
      required: [email]

    AuthResponse:
      type: object
      properties:
        message:
          type: string
        user:
          type: object
          properties:
            id:
              type: string
            first_name:
              type: string
            last_name:
              type: string
            username:
              type: string
            email:
              type: string
            role:
              type: string
        token:
          type: string
